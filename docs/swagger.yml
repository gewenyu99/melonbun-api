swagger: '2.0'
info:
  version: 1.0.0
  title: MelonBun - API
  description: MelonBun API Documentation
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
host: 'localhost:3000'
basePath: /
tags:
  - name: Requests
    description: API for requests in the system
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /requests:
    post:
      tags:
        - Requests
      description: Create new request in system
      parameters:
        - name: request_body
          description: New request submitted by the client
          in: body
          required: true
          schema:
            $ref: '#/definitions/RequestPostModel'
      produces:
        - application/json
      responses:
        '201':
          description: New request is created
          schema:
            $ref: '#/definitions/RequestResponseModel'
        default:
          description: Unexpected error occurred
          schema:
            $ref: '#/definitions/DefaultErrorModel'
    get:
      tags:
        - Requests
      summary: Get all requests in system
      responses:
        '200':
          description: Get all requests success
          schema:
            type: array
            items:
              $ref: '#/definitions/RequestResponseModel'
        default:
          description: Unexpected error occurred
          schema:
            $ref: '#/definitions/DefaultErrorModel'
  '/requests/{requestId}':
    parameters:
      - name: requestId
        in: path
        required: true
        description: ID of request that we want to find
        type: string
    get:
      tags:
        - Requests
      summary: Get request with given ID
      responses:
        '200':
          description: Request is found
          schema:
            $ref: '#/definitions/RequestResponseModel'
        default:
          description: Unexpected error occurred
          schema:
            $ref: '#/definitions/DefaultErrorModel'
    delete:
      summary: Delete request with given ID
      tags:
        - Requests
      responses:
        '200':
          description: Request is deleted
        default:
          description: Unexpected error occurred
          schema:
            $ref: '#/definitions/DefaultErrorModel'
    put:
      summary: Update request with give ID
      tags:
        - Requests
      parameters:
        - name: request_body
          in: body
          required: true
          description: Request with new values of properties
          schema:
            $ref: '#/definitions/RequestPutModel'
      responses:
        '200':
          description: Request is updated
          schema:
            $ref: '#/definitions/RequestResponseModel'
        default:
          description: Unexpected error occurred
          schema:
            $ref: '#/definitions/DefaultErrorModel'
definitions:
  RequestResponseModel:
    required:
      - id
      - name
      - description
      - created_at
      - created_by
      - status
      - fav_state
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      created_at:
        type: string
        format: date-time
      created_by:
        type: string
      fav_state:
        type: boolean
      status:
        type: string
        enum:
          - PENDING
          - FULFILLED
          - COMPLETE
          - INCOMPLETE
      price:
        $ref: '#/definitions/Price'
      tags:
        type: array
        items:
          type: string
  RequestPostModel:
    required:
      - name
      - description
      - created_by
    properties:
      name:
        type: string
      description:
        type: string
      created_by:
        type: string
      price:
        $ref: '#/definitions/Price'
      tags:
        type: array
        items:
          type: string
  RequestPutModel:
    properties:
      name:
        type: string
      description:
        type: string
      status:
        type: string
        enum:
          - PENDING
          - FULFILLED
          - COMPLETE
          - INCOMPLETE
      price:
        $ref: '#/definitions/Price'
      tags:
        type: array
        items:
          type: string
  Price:
    required:
      - value
      - currency
    properties:
      value:
        type: number
      currency:
        type: string
  DefaultErrorModel:
    properties:
      code:
        type: string
      message:
        type: string
      timestamp:
        type: string
        format: date-time
